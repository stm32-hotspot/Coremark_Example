<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [coremark_test\coremark_test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image coremark_test\coremark_test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Mon Feb 19 22:10:17 2024
<BR><P>
<H3>Maximum Stack Usage =        792 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ee_printf &rArr; __hardfp_modf &rArr; __aeabi_dsub
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">SecureFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SecureFault_Handler</a><BR>
 <LI><a href="#[2f]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2f]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2f]">ADC1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4f]">ADC2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from lto-llvm-10048f.o(.text.BusFault_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7e]">CEC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[79]">CORDIC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[55]">CRS_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[30]">DAC1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[73]">DCACHE1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[76]">DCMI_PSSI_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7b]">DTS_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[8]">DebugMon_Handler</a> from lto-llvm-10048f.o(.text.DebugMon_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[74]">ETH_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[75]">ETH_WKUP_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[16]">EXTI0_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[20]">EXTI10_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[21]">EXTI11_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[22]">EXTI12_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[23]">EXTI13_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[24]">EXTI14_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[25]">EXTI15_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[17]">EXTI1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[18]">EXTI2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[19]">EXTI3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1a]">EXTI4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1b]">EXTI5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1c]">EXTI6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1d]">EXTI7_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1e]">EXTI8_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1f]">EXTI9_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[31]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[32]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[77]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[78]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[12]">FLASH_S_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7a]">FMAC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[57]">FMC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[71]">FPU_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[26]">GPDMA1_Channel0_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[27]">GPDMA1_Channel1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[28]">GPDMA1_Channel2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[29]">GPDMA1_Channel3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[2a]">GPDMA1_Channel4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[2b]">GPDMA1_Channel5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[2c]">GPDMA1_Channel6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[2d]">GPDMA1_Channel7_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[64]">GPDMA2_Channel0_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[65]">GPDMA2_Channel1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[66]">GPDMA2_Channel2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[67]">GPDMA2_Channel3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[68]">GPDMA2_Channel4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[69]">GPDMA2_Channel5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6a]">GPDMA2_Channel6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6b]">GPDMA2_Channel7_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[13]">GTZC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7d]">HASH_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from lto-llvm-10048f.o(.text.HardFault_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3e]">I2C1_ER_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3d]">I2C1_EV_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[40]">I2C2_ER_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3f]">I2C2_EV_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5b]">I2C3_ER_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5a]">I2C3_EV_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[85]">I2C4_ER_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[84]">I2C4_EV_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[83]">I3C1_ER_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[82]">I3C1_EV_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[72]">ICACHE_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[2e]">IWDG_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4a]">LPTIM1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[50]">LPTIM2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[86]">LPTIM3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[87]">LPTIM4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[88]">LPTIM5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[89]">LPTIM6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[49]">LPUART1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from lto-llvm-10048f.o(.text.MemManage_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from lto-llvm-10048f.o(.text.NMI_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[58]">OCTOSPI1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[c]">PVD_AVD_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from lto-llvm-10048f.o(.text.PendSV_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[10]">RAMCFG_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[15]">RCC_S_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7c]">RNG_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[e]">RTC_S_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[62]">SAI1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[63]">SAI2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[59]">SDMMC1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[70]">SDMMC2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[41]">SPI1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[42]">SPI2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[43]">SPI3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5c]">SPI4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5d]">SPI5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5e]">SPI6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from lto-llvm-10048f.o(.text.SVC_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6]">SecureFault_Handler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from lto-llvm-10048f.o(.text.SysTick_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[8a]">SystemInit</a> from lto-llvm-10048f.o(.text.SystemInit) referenced from startup_stm32h563xx.o(.text)
 <LI><a href="#[f]">TAMP_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[7f]">TIM12_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[80]">TIM13_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[81]">TIM14_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[51]">TIM15_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[52]">TIM16_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[53]">TIM17_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[33]">TIM1_BRK_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[36]">TIM1_CC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[35]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[34]">TIM1_UP_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[37]">TIM2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[38]">TIM3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[39]">TIM4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3a]">TIM5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3b]">TIM6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[3c]">TIM7_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4b]">TIM8_BRK_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4e]">TIM8_CC_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4d]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[4c]">TIM8_UP_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6f]">UART12_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[47]">UART4_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[48]">UART5_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6c]">UART7_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6d]">UART8_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[6e]">UART9_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[56]">UCPD1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[60]">USART10_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[61]">USART11_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[44]">USART1_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[45]">USART2_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[46]">USART3_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5f]">USART6_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[54]">USB_DRD_FS_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from lto-llvm-10048f.o(.text.UsageFault_Handler) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[b]">WWDG_IRQHandler</a> from startup_stm32h563xx.o(.text) referenced from startup_stm32h563xx.o(RESET)
 <LI><a href="#[8b]">__main</a> from __main.o(!!!main) referenced from startup_stm32h563xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[8b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[8e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[d2]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[d3]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[8f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[d4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[95]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[90]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[d5]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[d7]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[da]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[db]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[dd]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[de]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[df]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[e0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[e1]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[e2]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[e3]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[e4]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[e5]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[e6]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[e7]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[e8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[e9]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ea]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[eb]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ec]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[ed]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[ee]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[ef]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[8d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[f0]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[92]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[94]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[f1]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[96]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ee_printf &rArr; __hardfp_modf &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f2]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[9f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[99]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[f3]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[9b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SecureFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecureFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>CORDIC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DAC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DCACHE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DCMI_PSSI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DTS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EXTI15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLASH_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>FMAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPDMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GPDMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GPDMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPDMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>GPDMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>GPDMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>GPDMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>GPDMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>GPDMA2_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>GPDMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>GPDMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>GPDMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>GPDMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>GPDMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>GPDMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>GPDMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GTZC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>HASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>I3C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>I3C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>ICACHE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>IWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>LPTIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OCTOSPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RAMCFG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>RCC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>UART12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>UART9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>UCPD1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>USART10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USART11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>USB_DRD_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_stm32h563xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[98]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[f7]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[f8]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[f9]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>_ll_udiv</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memset &rArr; _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>_memset</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset &rArr; _memset_w
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[fe]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[ff]"></a>__rt_memclr_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>_memset_w</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>SystemInit</STRONG> (Thumb, 174 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lto-llvm-10048f.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h563xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>main</STRONG> (Thumb, 8480 bytes, Stack size 104 bytes, lto-llvm-10048f.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = main &rArr; ee_printf &rArr; __hardfp_modf &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crcu16
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_list
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[b0]"></a>__hardfp_modf</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, modf.o(i.__hardfp_modf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_modf &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[be]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[c4]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>_ddiv</STRONG> (Thumb, 556 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[100]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)

<P><STRONG><a name="[c3]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dneq
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_deq
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[c5]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[102]"></a>__aeabi_cdcmpge</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)

<P><STRONG><a name="[c7]"></a>_dcmpge</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dgeqf.o(x$fpl$dgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgeq
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dgr
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[c8]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dls
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dleq
</UL>

<P><STRONG><a name="[104]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[b2]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[c9]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[c1]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[c0]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_modf
</UL>

<P><STRONG><a name="[ca]"></a>_dsub</STRONG> (Thumb, 472 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_dcmpeq</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[cc]"></a>_deq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[cd]"></a>_dneq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_dcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[ce]"></a>_dgr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_dcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[cf]"></a>_dgeq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpge
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_dcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[d0]"></a>_dleq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_dcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmplt
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[d1]"></a>_dls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[91]"></a>_fp_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[106]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[107]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[cb]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[bf]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[a3]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 10292 bytes, Stack size 8 bytes, lto-llvm-10048f.o(.text.HAL_RCCEx_GetPeriphCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 26952 bytes, Stack size 28 bytes, lto-llvm-10048f.o(.text.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[a4]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, lto-llvm-10048f.o(.text.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[a5]"></a>HAL_UART_MspInit</STRONG> (Thumb, 200 bytes, Stack size 280 bytes, lto-llvm-10048f.o(.text.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr8
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 746 bytes, Stack size 8 bytes, lto-llvm-10048f.o(.text.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ee_printf
</UL>

<P><STRONG><a name="[a8]"></a>core_bench_list</STRONG> (Thumb, 2090 bytes, Stack size 104 bytes, lto-llvm-10048f.o(.text.core_bench_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = core_bench_list &rArr; core_bench_matrix &rArr; crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crcu16
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_state
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_matrix
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>core_bench_matrix</STRONG> (Thumb, 7288 bytes, Stack size 248 bytes, lto-llvm-10048f.o(.text.core_bench_matrix))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = core_bench_matrix &rArr; crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_list
</UL>

<P><STRONG><a name="[a9]"></a>core_bench_state</STRONG> (Thumb, 1564 bytes, Stack size 112 bytes, lto-llvm-10048f.o(.text.core_bench_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = core_bench_state &rArr; crcu32
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crcu32
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_list
</UL>

<P><STRONG><a name="[ac]"></a>crc16</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, lto-llvm-10048f.o(.text.crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_matrix
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_list
</UL>

<P><STRONG><a name="[ab]"></a>crcu16</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, lto-llvm-10048f.o(.text.crcu16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crcu16
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_list
</UL>

<P><STRONG><a name="[ad]"></a>crcu32</STRONG> (Thumb, 538 bytes, Stack size 8 bytes, lto-llvm-10048f.o(.text.crcu32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crcu32
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;core_bench_state
</UL>

<P><STRONG><a name="[ae]"></a>ee_printf</STRONG> (Thumb, 6044 bytes, Stack size 632 bytes, lto-llvm-10048f.o(.text.ee_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = ee_printf &rArr; __hardfp_modf &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_modf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmplt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpeq
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
